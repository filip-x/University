     1                                  bits 32 
     2                                  segment code use32 public code
     3                                  global secventa
     4                                  
     5                                  
     6                                  
     7                                  segment data2 use32 class=data
     8 00000000 FF                          sem db -1
     9 00000001 02                          doi db 2
    10 00000002 00                          maxim db 0
    11 00000003 00000000                    inceput dd 0
    12 00000007 00000000                    secventa_finala dd 0
    13 0000000B <res 00000064>              noul_sir resb 100
    14                                      
    15                                  
    16                                    secventa:
    17                                  
    18 0000006F 8B742404                    mov esi,[esp+4]
    19                                      while_1:
    20 00000073 B900000000                      mov ecx,0
    21 00000078 B300                            mov bl,0
    22 0000007A 381E                            cmp [esi],bl
    23 0000007C 7202                            jb negativ
    24 0000007E EB08                            jmp positiv
    25                                     
    26                                          negativ:
    27 00000080 8A06                                mov al,[esi]
    28 00000082 F62D[00000000]                      imul byte [sem]
    29                                          positiv:
    30                                          ; in caz ca e negativ 
    31                                          
    32 00000088 8A06                            mov al,[esi]
    33 0000008A F635[01000000]                  div byte [doi]
    34 00000090 80FC00                          cmp ah,0
    35 00000093 7502                            jne impar
    36 00000095 EB10                            jmp peste_impar
    37                                          ; dacae impar
    38                                          impar:
    39 00000097 83F900                              cmp ecx,0
    40 0000009A 7402                                je nou
    41 0000009C EB06                                jmp nu_nou
    42                                              nou:
    43 0000009E 8935[03000000]                          mov [inceput],esi
    44                                              nu_nou:
    45                                              ; am verificat daca suntem la inceput de secventa si salvam in inceput adresa de inceput a fiecarei secventei
    46 000000A4 41                                  inc ecx
    47 000000A5 EB1F                                jmp peste_par
    48                                          peste_impar:
    49                                          par:
    50 000000A7 A1[03000000]                        mov eax,[inceput]
    51 000000AC 380D[02000000]                      cmp [maxim],cl
    52 000000B2 7202                                jb schimbare
    53 000000B4 EB0B                                jmp treci_peste
    54                                              schimbare:
    55 000000B6 A3[07000000]                        mov [secventa_finala],eax
    56 000000BB 880D[02000000]                      mov [maxim],cl
    57                                              treci_peste: 
    58 000000C1 B900000000                          mov ecx,0
    59                                          peste_par:
    60                                          
    61                                          
    62 000000C6 46                              inc esi; crestem esi pentru final
    63                                      ; final primul while
    64 000000C7 B300                            mov bl,0
    65 000000C9 381E                            cmp [esi],bl
    66 000000CB 75A6                            jne while_1
    67 000000CD B800000000                  mov eax,0
    68 000000D2 B900000000                  mov ecx,0
    69                                      
    70 000000D7 A1[07000000]                mov eax,[secventa_finala]
    71 000000DC 8A0D[02000000]              mov cl,[maxim]
    72                                          
    73 000000E2 C20400                  ret 4
