     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  extern fopen
    12                                  import fopen msvcrt.dll
    13                                  extern fclose
    14                                  import fclose msvcrt.dll
    15                                  extern fread
    16                                  import fread msvcrt.dll
    17                                  extern fread
    18                                  import fread msvcrt.dll
    19                                  extern fprintf
    20                                  import fprintf msvcrt.dll
    21                                  extern scanf
    22                                  import scanf msvcrt.dll
    23                                  extern printf 
    24                                  import printf msvcrt.dll
    25                                  
    26                                  ; our data is declared here (the variables needed by our program)
    27                                  segment data use32 class=data
    28                                      ; ...
    29                                      ;A file name (defined in data segment) is given. Create a file with the given name, then read words from the keyboard until character '$' is read from the ;keyboard. Write only the words that contain at least on
    30                                      
    31 00000000 646174652E696E00            file_name db "date.in",0;
    32 00000008 7700                        access_mode db "w",0;
    33 0000000A FFFFFFFF                    file_descriptor dd -1;
    34                                      
    35 0000000E <res 0000000F>              cuvant resb 15;
    36 0000001D 437576616E743D2000          screen_msg db "Cuvant= ",0;
    37                                      
    38 00000026 257300                      format_cuvant db "%s",0;
    39 00000029 25732000                    format_afisare_fisier db "%s ", 0
    40                                      
    41                                  ; our code starts here
    42                                  segment code use32 class=code
    43                                      start:
    44                                          ; ...
    45                                          ;open file
    46 00000000 68[08000000]                    push dword access_mode;
    47 00000005 68[00000000]                    push dword file_name;
    48 0000000A FF15[00000000]                  call [fopen];
    49 00000010 83C408                          add esp,4*2;
    50                                         
    51                                          ;check if file opened correctly
    52 00000013 83F800                          cmp eax,0;
    53 00000016 7472                            je final
    54 00000018 A3[0A000000]                    mov [file_descriptor],eax;
    55                                         
    56                                         
    57                                          bucla:; bucla pentru citire de la tastatura cuivinte
    58                                              
    59 0000001D 68[1D000000]                        push dword screen_msg;
    60 00000022 FF15[00000000]                      call [printf];
    61 00000028 83C404                              add esp,4*1;
    62                                             
    63 0000002B 68[0E000000]                        push dword cuvant;
    64 00000030 68[26000000]                        push dword format_cuvant;
    65 00000035 FF15[00000000]                      call [scanf];
    66 0000003B 83C408                              add esp,4*2;
    67                                              
    68 0000003E BE[0E000000]                        mov esi,cuvant;
    69                                              verificare:
    70 00000043 8A1E                                   mov bl,[esi]
    71 00000045 80FB30                                 cmp bl,'0'
    72 00000048 7220                                   jnae c1
    73 0000004A 80FB39                                 cmp bl,'9'
    74                                                 
    75 0000004D 771B                                   ja c1
    76                                                 
    77                                                 ;afisare in fisier
    78 0000004F 68[0E000000]                           push dword cuvant 
    79 00000054 68[29000000]                           push dword format_afisare_fisier
    80 00000059 FF35[0A000000]                         push dword [file_descriptor]
    81 0000005F FF15[00000000]                         call [fprintf]
    82 00000065 83C40C                                 add esp,4*3;
    83 00000068 EBB3                                   jmp bucla
    84                                                 c1:
    85 0000006A 46                                  inc esi;
    86 0000006B 807EFF00                            cmp byte[esi-1],0;
    87 0000006F 75D2                                jne verificare
    88                                              
    89 00000071 B024                                mov al,'$';
    90 00000073 3A05[0E000000]                  cmp al,[cuvant]
    91 00000079 75A2                            jne bucla;
    92                                              
    93                                          
    94                                     
    95                                         
    96                                         
    97                                          ; close file
    98                                          cleanup:
    99 0000007B FF35[0A000000]                  push dword [file_descriptor];
   100 00000081 FF15[00000000]                  call [fclose]
   101 00000087 83C404                          add esp,4;
   102                                          
   103                                          
   104                                          final:
   105                                          
   106                                          ; exit(0)
   107 0000008A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   108 0000008C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
