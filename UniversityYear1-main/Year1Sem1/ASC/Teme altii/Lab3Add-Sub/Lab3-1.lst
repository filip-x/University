     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 05                          a db 5
    15 00000001 3C00                        b dw 60
    16 00000003 64000000                    c dd 100
    17 00000007 2C01000000000000            d dq 300
    18                                      
    19                                      
    20                                      
    21                                      
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26                                          ;100-5+300+60+300=205+360=565
    27                                          ;c-(a+d)+(b+d)-unsigned
    28                                          ;60+100+5-300+100+5=165-405=-240
    29                                          ;(b+c+a)-(d+c+a)-unsigned
    30                                          ;100+60+5-600=-435
    31                                          ;(c+b+a)-(d+d)-sign
    32                                          ;300-5+100+100-60+5=295+140+5=440
    33                                          ;d-a+c+c-b+a-sign
    34 00000000 B800000000                      mov eax,0;
    35 00000005 BB00000000                      mov ebx,0;
    36 0000000A B900000000                      mov ecx,0;
    37 0000000F BA00000000                      mov edx,0;
    38                                          
    39 00000014 A1[07000000]                    mov eax,[d];low
    40 00000019 8B15[0B000000]                  mov edx,[d+4]; high
    41 0000001F 8A1D[00000000]                  mov bl,[a];
    42                                          
    43 00000025 01D8                            add eax,ebx; low
    44 00000027 83D200                          adc edx,0; high
    45                                          
    46 0000002A 2B05[03000000]                 sub eax,[c];low 
    47 00000030 83DA00                         sbb edx,0;high
    48                                         
    49 00000033 BB00000000                      mov ebx,0;
    50 00000038 B900000000                      mov ecx,0;
    51                                          
    52 0000003D 8B1D[07000000]                  mov ebx,[d]; low 
    53 00000043 668B0D[01000000]                mov cx,[b];
    54 0000004A 01CB                            add ebx,ecx;
    55 0000004C B900000000                      mov ecx,0;
    56 00000051 8B0D[0B000000]                  mov ecx,[d+4]; high 
    57 00000057 83D100                          adc ecx,0;
    58                                          
    59                                          
    60 0000005A 01D8                            add eax,ebx; with the numbers that i explain the result is 565
    61 0000005C 11CA                            adc edx,ecx;
    62                                          
    63                                         ;-------------------------------------------------------------------------
    64 0000005E B800000000                      mov eax,0;
    65 00000063 BB00000000                      mov ebx,0;
    66 00000068 B900000000                      mov ecx,0;
    67 0000006D BA00000000                      mov edx,0;
    68                                          
    69 00000072 A0[00000000]                    mov al,[a];
    70 00000077 660305[01000000]                add ax,[b];
    71 0000007E 6683C200                        add dx,0;
    72 00000082 0305[03000000]                  add eax,[c];
    73 00000088 83D200                          adc edx,0;
    74                                          
    75 0000008B 8A0D[00000000]                  mov cl,[a];
    76 00000091 030D[03000000]                  add ecx,[c];
    77 00000097 030D[07000000]                  add ecx,[d];
    78 0000009D 031D[0B000000]                  add ebx,[d+4];
    79                                          
    80 000000A3 29C8                            sub eax,ecx;with the nr that i explain the result is -240 
    81 000000A5 19DA                            sbb edx,ebx;
    82                                          
    83                                          ;-----------------------------------------------------------
    84                                          ;Sign (c+b+a)-(d+d)
    85 000000A7 B800000000                      mov eax,0;
    86 000000AC BB00000000                      mov ebx,0;
    87 000000B1 B900000000                      mov ecx,0;
    88 000000B6 BA00000000                      mov edx,0;
    89                                          
    90 000000BB A0[00000000]                    mov al,[a];
    91 000000C0 6698                            cbw
    92 000000C2 660305[01000000]                add ax,[b];
    93 000000C9 6683D200                        adc dx,0;
    94                                          
    95 000000CD 6652                            push dx;
    96 000000CF 6650                            push ax;
    97                                          
    98 000000D1 58                              pop eax;
    99                                          
   100 000000D2 BA00000000                      mov edx,0
   101                                          
   102 000000D7 0305[03000000]                  add eax,[c];
   103 000000DD 83D200                          adc edx,0;
   104                                          
   105 000000E0 8B1D[07000000]                  mov ebx,[d];
   106 000000E6 8B0D[0B000000]                  mov ecx,[d+4];
   107 000000EC 031D[07000000]                  add ebx,[d];
   108 000000F2 130D[0B000000]                  adc ecx,[d+4];
   109                                          
   110 000000F8 29D8                            sub eax,ebx;
   111 000000FA 19CA                            sbb edx,ecx;
   112                                          
   113                                          ;--------------------------------------------------------
   114                                          ;d-a+c+c-b+a
   115 000000FC B800000000                      mov eax,0;
   116 00000101 BB00000000                      mov ebx,0;
   117 00000106 B900000000                      mov ecx,0;
   118 0000010B BA00000000                      mov edx,0;
   119                                          
   120 00000110 66A1[01000000]                  mov ax,[b]
   121 00000116 98                              cwde
   122 00000117 8B1D[03000000]                  mov ebx,[c];
   123 0000011D 29C3                            sub ebx,eax;
   124 0000011F B800000000                      mov eax,0;
   125 00000124 A0[00000000]                    mov al,[a];
   126 00000129 6698                            cbw
   127 0000012B 98                              cwde
   128 0000012C 01D8                            add eax,ebx;
   129 0000012E 83D200                          adc edx,0;
   130 00000131 0305[03000000]                  add eax,[c];
   131 00000137 83D200                          adc edx,0;
   132                                          
   133 0000013A 52                              push edx;
   134 0000013B 50                              push eax;
   135 0000013C B800000000                      mov eax,0;
   136 00000141 BA00000000                      mov edx,0;
   137 00000146 A0[00000000]                    mov al,[a];
   138 0000014B 6698                            cbw
   139 0000014D 98                              cwde
   140 0000014E 99                              cdq
   141 0000014F 8B1D[07000000]                  mov ebx,[d];
   142 00000155 8B0D[0B000000]                  mov ecx,[d+4];
   143 0000015B 29C3                            sub ebx,eax;
   144 0000015D 19D1                            sbb ecx,edx;
   145 0000015F B800000000                      mov eax,0;
   146 00000164 BA00000000                      mov edx,0;
   147 00000169 58                              pop eax;
   148 0000016A 5A                              pop edx;
   149 0000016B 01D8                            add eax,ebx;
   150 0000016D 11CA                            adc edx,ecx;
   151                                          
   152                                          
   153                                          
   154                                          
   155                                          
   156                                          
   157                                          
   158                                          
   159                                         
   160                                         
   161                                          
   162                                          
   163                                          
   164                                          
   165                                          
   166                                         
   167                                          
   168                                          
   169                                          
   170                                          
   171                                          
   172                                          
   173                                          
   174                                          
   175                                          
   176                                          
   177                                          
   178                                          
   179                                          ; exit(0)
   180 0000016F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   181 00000171 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
