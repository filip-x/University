     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9                                      ; ...
    10 00000000 01000500FBFF0A000B-         sir_1 dw 1, 5, -5, 10, 11, 13
    10 00000009 000D00             
    11                                      len equ ($ - sir_1) / 2
    12 0000000C 0A00140005000700F5-         sir_2 dw 10, 20, 5, 7, -11, 20
    12 00000015 FF1400             
    13 00000018 FFFFFFFF                    dd -1
    14 0000001C <res 0000000C>              sir_3 resw len
    15                                      
    16                                  
    17                                  segment code use32 class=code
    18                                      start:
    19                                          ; ...
    20 00000000 BE00000000                      mov esi, 0
    21 00000005 BF[1C000000]                    mov edi, sir_3
    22 0000000A FC                              cld
    23 0000000B B906000000                      mov ecx, len
    24                                          for_1:
    25 00000010 668B86[00000000]                    mov ax, [sir_1 + esi]
    26 00000017 668B9E[0C000000]                    mov bx, [sir_2 + esi]
    27 0000001E 6639D8                              cmp ax, bx
    28 00000021 7606                                jna else
    29 00000023 7E04                                jng else
    30                                              if_1:
    31 00000025 66AB                                    stosw
    32 00000027 EB17                                    jmp endif
    33                                              else:
    34 00000029 6639C3                                  cmp bx, ax
    35 0000002C 7609                                    jna else_2
    36 0000002E 7E07                                    jng else_2
    37                                                  if_2:
    38 00000030 6689D8                                      mov ax, bx
    39 00000033 66AB                                        stosw
    40 00000035 EB09                                        jmp endif_2
    41                                                  else_2:
    42 00000037 66BA0000                                    mov dx, 0
    43 0000003B 66F7EB                                      imul bx
    44 0000003E 66AB                                        stosw
    45                                                  endif_2:
    46                                              endif:
    47 00000040 46                                  inc esi
    48 00000041 46                                  inc esi
    49 00000042 E2CC                                loop for_1
    50                                  
    51                                          ; exit(0)
    52 00000044 6A00                            push dword 0
    53 00000046 FF15[00000000]                  call [exit]
