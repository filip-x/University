     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  extern scanf
    11                                  import scanf msvcrt.dll
    12                                  
    13                                  extern printf
    14                                  import printf msvcrt.dll
    15                                  
    16                                  extern fopen
    17                                  import fopen msvcrt.dll      
    18                                  
    19                                  extern fclose
    20                                  import fclose msvcrt.dll
    21                                  
    22                                  extern fprintf
    23                                  import fprintf msvcrt.dll                   
    24                                                   
    25                                  
    26                                  ; our data is declared here (the variables needed by our program)
    27                                  segment data use32 class=data
    28                                      ; ...
    29                                      ;Read a file name and a text from the keyboard. Create a file with that name in the current folder and write the text that has been read to file. Observations: The file name has maximum 30 characters. The text h
    30 00000000 46696C65206E616D65-         msg db "File name",0
    30 00000009 00                 
    31 0000000A 5465787400                  msg2 db "Text",0
    32 0000000F <res 0000001F>              file resb 31
    33 0000002E <res 00000079>              text resb 121
    34 000000A7 7700                        access db "w",0
    35 000000A9 257300                      format db "%s",0
    36 000000AC FFFFFFFF                    desc dd -1
    37                                  ; our code starts here
    38                                  segment code use32 class=code
    39                                      start:
    40                                          ; ...
    41 00000000 68[00000000]                    push msg 
    42 00000005 68[A9000000]                    push dword format 
    43 0000000A FF15[00000000]                  call [printf] ;print 
    44 00000010 83C608                          add ESI, 4*2
    45                                          ;Getting the file name
    46 00000013 68[0F000000]                    push file
    47 00000018 68[A9000000]                    push dword format
    48 0000001D FF15[00000000]                  call [scanf] ;write
    49 00000023 83C408                          add ESP, 4*2
    50                                          ;Printing text:
    51 00000026 68[0A000000]                    push msg2
    52 0000002B 68[A9000000]                    push dword format
    53 00000030 FF15[00000000]                  call [printf] 
    54 00000036 83C408                          add ESP, 4*2
    55                                          ;Getting the text to write
    56 00000039 68[2E000000]                    push text
    57 0000003E 68[A9000000]                    push dword format
    58 00000043 FF15[00000000]                  call [scanf] ;write
    59 00000049 83C408                          add ESP,4*2
    60                                          ;Creating the file(or opening it if exists)
    61 0000004C 68[A7000000]                    push access
    62 00000051 68[0F000000]                    push file
    63 00000056 FF15[00000000]                  call [fopen] ; open the file
    64 0000005C 83C408                          add ESP,4*2
    65 0000005F A3[AC000000]                    mov [desc],eax
    66 00000064 83F800                          cmp eax,0
    67 00000067 7423                            je end
    68                                          ;Writing the text into  the file
    69 00000069 68[2E000000]                    push dword text
    70 0000006E FF35[AC000000]                  push dword [desc]
    71 00000074 FF15[00000000]                  call [fprintf] ; print in the file 
    72 0000007A 83C408                          add ESP,4*2
    73                                          ;Cllosing the file
    74 0000007D FF35[AC000000]                  push dword [desc]
    75 00000083 FF15[00000000]                  call [fclose] ;closing the file
    76 00000089 83C404                          add ESP,4*1
    77                                          end:
    78                                          
    79                                      
    80                                          ; exit(0)
    81 0000008C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    82 0000008E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
