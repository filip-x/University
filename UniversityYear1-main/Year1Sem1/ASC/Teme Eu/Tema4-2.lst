     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 2B95                        a dw 38187
    15 00000002 0000                        b dw 0
    16 00000004 00000000                    c dd 0
    17 00000008 00                          n db 0
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                          ; Creating n...
    23 00000000 B007                            mov al, 111b
    24 00000002 2205[00000000]                  and al, byte [a]
    25 00000008 A2[08000000]                    mov [n], al
    26                                          ; --
    27                                          ; Adding bits 2-9 of B to bits 16-23 of C
    28 0000000D BB00000000                      mov ebx, 0
    29 00000012 668B1D[00000000]                mov bx, [a]
    30 00000019 8A0D[08000000]                  mov cl, [n]
    31 0000001F 66D3CB                          ror bx, cl
    32 00000022 66891D[02000000]                mov [b], bx
    33 00000029 6681E3FC03                      and bx, 1111111100b
    34 0000002E C1E30E                          shl ebx, 14
    35 00000031 B90000FF00                      mov ecx, 0FF0000h
    36 00000036 21D9                            and ecx, ebx
    37                                          ; Adding bits 7-14 of A to bits 24-31 of C
    38 00000038 81C9000000FF                    or ecx, 0FF000000h
    39 0000003E BB00000000                      mov ebx, 0
    40 00000043 668B1D[00000000]                mov bx, [a]
    41 0000004A 6681E3807F                      and bx,  7F80h
    42 0000004F C1E311                          shl ebx, 17
    43 00000052 81CBFFFFFF00                    or ebx, 00FFFFFFh
    44 00000058 21D9                            and ecx, ebx
    45 0000005A 81C9FF000000                    or ecx, 0FFh
    46                                          ; exit(0)
    47 00000060 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000062 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
