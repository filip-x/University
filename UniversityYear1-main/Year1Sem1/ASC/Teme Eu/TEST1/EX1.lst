     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;(b / a * 2 + 10) * b - b * 15;
    15                                      ; ex. 1: a = 10; b = 40;
    16                                  
    17 00000000 64                          a db 100
    18 00000001 3200                        b dw 50
    19 00000003 02                          c db 2
    20 00000004 0F                          d db 15
    21                                      
    22                                      
    23                                      
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; ...
    28 00000000 66A1[01000000]                  mov ax,[b]
    29 00000006 8A1D[00000000]                  mov bl,[a]
    30 0000000C F6F3                            div bl ;doing the division it get to al  
    31 0000000E F625[03000000]                  mul  byte[c] ;the multiplication gets us ax
    32 00000014 6683C00A                        add ax, 10
    33 00000018 66F725[01000000]                mul word[b]
    34 0000001F 6652                            push dx
    35 00000021 6650                            push ax
    36 00000023 66B80000                        mov ax,0
    37 00000027 66BA0000                        mov dx,0
    38 0000002B 66A1[01000000]                  mov ax,[b]
    39 00000031 66F725[04000000]                mul word[d]
    40 00000038 5B                              pop ebx
    41 00000039 6652                            push dx
    42 0000003B 6650                            push ax
    43 0000003D 59                              pop ecx
    44 0000003E 29CB                            sub ebx,ecx
    45                                          
    46                                          
    47                                          
    48                                          
    49                                          
    50                                          
    51                                          
    52                                          
    53                                          
    54                                          
    55                                          
    56                                      
    57                                          ; exit(0)
    58 00000040 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    59 00000042 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
